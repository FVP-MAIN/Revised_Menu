/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package revisedmenu.del_report;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author mis
 */
public class DEL_REPORT extends javax.swing.JInternalFrame {
String loc1, fdt, tdt;
 //Date fdate, tdte;
    /**
     * Creates new form DEL_REPORT
     */
    public DEL_REPORT() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        print = new javax.swing.JButton();
        loc = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        DFROM = new javax.swing.JTextField();
        DTO = new javax.swing.JTextField();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setTitle("Delivery Sumary Report");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("TO:");
        jLabel4.setName(""); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Inventory Code:");
        jLabel3.setName(""); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("FROM:");
        jLabel2.setName(""); // NOI18N

        label1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        label1.setText("Delivery Summary Report");

        print.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        print.setText("PRINT");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        loc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "MANILA", "IOPS", "IOPS-MINDANAO" }));
        loc.setToolTipText("");
        loc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("CLOSE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        DFROM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DFROM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DFROMActionPerformed(evt);
            }
        });

        DTO.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DTO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DTOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(print)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loc, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DFROM, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DTO, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DFROM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DTO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(print))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed

        String fdate = DFROM.getText();
        String tdte = DTO.getText();
        Object selectedItem = loc.getSelectedItem();
        loc1 = loc.getSelectedItem().toString().trim();
        DFROM.grabFocus();
        DTO.grabFocus();

        try {
            String Host ="jdbc:oracle:thin:@192.168.0.108:1521/QUADRNT";
            String Uname ="dev";
            String Pword ="neoquadro";

            Connection conn = DriverManager.getConnection(Host,Uname,Pword);
            Map params = new HashMap();
            params.put("past", fdate);
            params.put("present", tdte);

            if(loc.getSelectedItem().equals("MANILA")){
                JasperDesign jd = JRXmlLoader.load("C:\\Users\\mis\\Documents\\NetBeansProjects\\RevisedMenu\\src\\revisedmenu\\del_report\\DEL_MANILA.jrxml");
                String Sql = "SELECT A.DRDATE, B.ITMCOD,SUM(B.QTY),C.DES, C.SUPNME "
                + "   FROM DR_H2 A, DR_D2 B, ITEMS C"
                + "   WHERE A.DRNO = B.DRNO AND B.ITMCOD = C.ITMCOD "
                + "   AND A.DRDATE >='"+fdate+"' AND A.DRDATE <= '"+tdte+"' AND A.ISDLVRY='T'"
                + "   AND (A.ISCANCEL = 'F' OR ISCANCEL IS NULL OR ISCANCEL ='')"
                + "   AND C.SUPNME IN(SELECT SUPNME FROM SUPPLIER_VITA)"
                + "   GROUP BY A.DRDATE, B.ITMCOD, C.DES, C. SUPNME ORDER BY C.SUPNME";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(Sql);
                jd.setQuery(newQuery);

                JasperReport rptComp = JasperCompileManager.compileReport(jd);
                JasperPrint rptPrint = JasperFillManager.fillReport(rptComp, params, conn);
                JasperViewer.viewReport(rptPrint, false);

                DFROM.setText("");
                DTO.setText("");
                loc.setSelectedItem("");
            }

            else if(loc.getSelectedItem().equals("IOPS")){
                JasperDesign jd2 = JRXmlLoader.load("C:\\Users\\mis\\Documents\\NetBeansProjects\\RevisedMenu\\src\\revisedmenu\\del_report\\DEL_IOPS.jrxml");
                String Sql2 = "SELECT A.DRDATE, B.ITMCOD,SUM(B.QTY),C.DES, C.SUPNME "
                + "   FROM DR_H2_IOPS A, DR_D2_IOPS B, ITEMS_IOPS C"
                + "   WHERE A.DRNO = B.DRNO AND B.ITMCOD = C.ITMCOD "
                + "   AND A.DRDATE >='"+fdate+"' AND A.DRDATE <= '"+tdte+"' AND A.ISDLVRY='T'"
                + "   AND (A.ISCANCEL = 'F' OR A.ISCANCEL IS NULL OR A.ISCANCEL ='')"
                + "   AND C.SUPNME IN(SELECT SUPNME FROM SUPPLIER_VITA) "
                + "   GROUP BY A.DRDATE, B.ITMCOD, C.DES, C. SUPNME ORDER BY C.SUPNME";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(Sql2);
                jd2.setQuery(newQuery);

                JasperReport rptComp2 = JasperCompileManager.compileReport(jd2);
                JasperPrint rptPrint2 = JasperFillManager.fillReport(rptComp2, params, conn);
                JasperViewer.viewReport(rptPrint2, false);

                DFROM.setText("");
                DTO.setText("");
                loc.setSelectedItem("");

            }

            else if(loc.getSelectedItem().equals("IOPS-MINDANAO")){
                JasperDesign jd3 = JRXmlLoader.load("C:\\Users\\mis\\Documents\\NetBeansProjects\\RevisedMenu\\src\\revisedmenu\\del_report\\DEL_IOPS.jrxml");
                String Sql3 = "SELECT A.TDATE, B.ITMCOD, SUM(B.QTY), C.DES, C.SUPNME "
                + "FROM DR_H2_DWD A, DR_D2_DWD B, ITEMS_DWD C "
                + "WHERE A.REFDOC1 = B.REFDOC1 AND B.ITMCOD = C.ITMCOD "
                + "AND A.TDATE >= '"+fdate+"' AND A.TDATE <= '"+tdte+"' AND A.DOCTYPE='R' "
                + "AND (A.ISCANCEL = 'F' OR A.ISCANCEL IS NULL OR A.ISCANCEL ='')"
                + " AND C.SUPNME IN(SELECT SUPNME FROM SUPPLIER_VITA) "
                + "GROUP BY A.TDATE, B.ITMCOD, C.DES, C.SUPNME "
                + "ORDER BY C.SUPNME";
                JRDesignQuery newQuery = new JRDesignQuery();
                newQuery.setText(Sql3);
                jd3.setQuery(newQuery);

                JasperReport rptComp3 = JasperCompileManager.compileReport(jd3);
                JasperPrint rptPrint3 = JasperFillManager.fillReport(rptComp3, params, conn);
                JasperViewer.viewReport(rptPrint3, false);

                DFROM.setText("");
                DTO.setText("");
                loc.setSelectedItem("");
            }
            else{
                JOptionPane.showMessageDialog(null, "SELECT LOCATION AND INPUT DATE");
            }
        }
        catch (SQLException | JRException ex) {
            Logger.getLogger(DEL_REPORT.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printActionPerformed

    private void locActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void DFROMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DFROMActionPerformed
        print.grabFocus();
    }//GEN-LAST:event_DFROMActionPerformed

    private void DTOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DTOActionPerformed
        print.grabFocus();
    }//GEN-LAST:event_DTOActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DFROM;
    private javax.swing.JTextField DTO;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private java.awt.Label label1;
    private javax.swing.JComboBox<String> loc;
    private javax.swing.JButton print;
    // End of variables declaration//GEN-END:variables
}
