/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package revisedmenu.dealers_info;



import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import revisedmenu.Home;
import revisedmenu.OracleSqlConnect;
import revisedmenu.users.USER_ACCESS;


/**
 *
 * @author mis
 */
public class MEMBERS extends javax.swing.JInternalFrame {
String s_origin, s_account, s_ipac, s_psol, s_replace, s_plus, s_qdate, s_ba, s_upline, s_sponsor,
       s_plusponsor, s_sur1, s_sur2, s_sur3, s_sur4, s_fname1, s_fname2, s_fname3, s_fname4, 
       s_m1, s_m2, s_m3, s_m4,s_namecheck, s_powerby, s_business, s_recip, s_home, s_maxup, s_newdeal,
       s_ga, s_bdate, s_ppack, s_ppack1, s_maxstats, s_maxstats1, s_maxdate, s_expdate, s_stats, s_stats1, s_actdate, s_incdate,
       s_piba, s_piba1, s_datepiba, s_idpcard, s_payout, s_payout1, s_banktrans, s_blocked, s_blocked1, s_term, s_term1, s_dtb, s_dealcat, s_team, s_mh,
       s_sex, s_om, s_omdeal, s_fm, s_fmdeal, s_known, s_nationality, s_civilstat, s_tnumber, s_offphone, s_profession,
       s_tin, s_mobphone, s_altphone, s_email, s_altemail, s_legacy, s_loyal, s_autorev, s_autoship, s_fmnominated, s_omnominated,
       s_isas, s_packagedate, s_rem, s_remlegal, s_hofcateg, s_aegexpdate;
 Date Date_Plus, Date_Q, Date_Birth, Date_Max, Date_Exp, Date_Act, Date_Inc, Date_Piba, Date_DTB, Date_ISAS;

  int nCnt = 0;
  int  s_civilstat1, s_dealcat1, s_grp1 ;
    public MEMBERS() {
        initComponents();
  
  
    JTextField[] textFields = {
        txtOrigin, txtAccount, txtIpac, txtPSOL, txtReplace, txtPlus, txtQdate, txtUP, 
        txtSponsor, txtPsponsor, txtsur1, txtsur2, txtsur3, txtsur4, txtFirst1, txtFirst2, 
        txtFirst3, txtFirst4, txtMiddle1, txtMiddle2, txtMiddle3, txtMiddle4, txtAppear,txtHome,
        txtBusiness, txtReciept, txtPower, txtMax,  txtBirth, txtPPack, txtmaxStats, txtmaxDate,
        txtexpDate, txtStatus,  txtdateAct, txtdateInact, txtPiba, txtdatePiba, txtidPower, txtPayout,
        txtBlocked, txtTerminated, txtdateTermBlock, txtDealer, txtTeam, txtMH, txtKnown, txtNationality,
        txtTelnum, txtOffice, txtProf, txtTIN, txtMobile, txtAltnum, txtEmail, txtAltemail, txtPackage, 
        txtRemarks, txtLegal
    };
    for (JTextField textField : textFields) {
        textField.setEditable(false);
         }
    for (JTextField textField : textFields) {
                        textField.setText("");
                        textField.setEditable(false);
                     }
    JCheckBox[] checkboxes = {
        cNewdealer, cOM, comDealer, cFM, cfmDealer, cLegacy, cLoyal,
        cAutoshiprev, cautoLegacy, cFMnominated, cOMnominated, cSAS
                           
          };
    for (JCheckBox checkbox : checkboxes) {
                        checkbox.setSelected(false);
                        checkbox.setEnabled(false);
                    }
    JRadioButton[] radioButtons = {rsexM, rsexF, rGroupA, rGroupB};

    for (JRadioButton radioButton : radioButtons) {
                        radioButton.setSelected(false);
                        radioButton.setEnabled(false);
                    } 
                  
                    comCivil.setSelectedItem(null); 
                    comCivil.setEnabled(false);
                       
 
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtOrigin = new javax.swing.JTextField();
        cNewdealer = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        txtPlus = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        txtMax = new javax.swing.JTextField();
        txtPower = new javax.swing.JTextField();
        txtReciept = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        txtBusiness = new javax.swing.JTextField();
        txtHome = new javax.swing.JTextField();
        txtAppear = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtQdate = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPSOL = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtReplace = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtsur4 = new javax.swing.JTextField();
        txtBA = new javax.swing.JTextField();
        txtAccount = new javax.swing.JTextField();
        txtSponsor = new javax.swing.JTextField();
        txtsur1 = new javax.swing.JTextField();
        txtIpac = new javax.swing.JTextField();
        txtPsponsor = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtMiddle4 = new javax.swing.JTextField();
        txtMiddle3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtFirst4 = new javax.swing.JTextField();
        txtsur3 = new javax.swing.JTextField();
        txtFirst3 = new javax.swing.JTextField();
        txtUP = new javax.swing.JTextField();
        txtMiddle2 = new javax.swing.JTextField();
        txtsur2 = new javax.swing.JTextField();
        txtFirst2 = new javax.swing.JTextField();
        txtFirst1 = new javax.swing.JTextField();
        txtMiddle1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        txtBirth = new javax.swing.JTextField();
        txtPPack = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        rGroupB = new javax.swing.JRadioButton();
        rGroupA = new javax.swing.JRadioButton();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        txtmaxStats = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        txtexpDate = new javax.swing.JTextField();
        txtmaxDate = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        txtPiba = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        txtdateInact = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        txtdateAct = new javax.swing.JTextField();
        txtidPower = new javax.swing.JTextField();
        txtdatePiba = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        txtPayout = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        txtDealer = new javax.swing.JTextField();
        txtBlocked = new javax.swing.JTextField();
        jLabel64 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        txtdateTermBlock = new javax.swing.JTextField();
        jLabel67 = new javax.swing.JLabel();
        txtTerminated = new javax.swing.JTextField();
        txtMH = new javax.swing.JTextField();
        txtTeam = new javax.swing.JTextField();
        jLabel68 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel69 = new javax.swing.JLabel();
        rsexF = new javax.swing.JRadioButton();
        rsexM = new javax.swing.JRadioButton();
        jPanel11 = new javax.swing.JPanel();
        cOM = new javax.swing.JCheckBox();
        comDealer = new javax.swing.JCheckBox();
        jPanel13 = new javax.swing.JPanel();
        cFM = new javax.swing.JCheckBox();
        cfmDealer = new javax.swing.JCheckBox();
        txtKnown = new javax.swing.JTextField();
        jLabel70 = new javax.swing.JLabel();
        txtNationality = new javax.swing.JTextField();
        jLabel71 = new javax.swing.JLabel();
        comCivil = new javax.swing.JComboBox<>();
        jLabel72 = new javax.swing.JLabel();
        txtTelnum = new javax.swing.JTextField();
        jLabel73 = new javax.swing.JLabel();
        txtOffice = new javax.swing.JTextField();
        jLabel74 = new javax.swing.JLabel();
        txtProf = new javax.swing.JTextField();
        jLabel75 = new javax.swing.JLabel();
        txtTIN = new javax.swing.JTextField();
        jLabel76 = new javax.swing.JLabel();
        txtMobile = new javax.swing.JTextField();
        jLabel79 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        txtAltnum = new javax.swing.JTextField();
        jLabel83 = new javax.swing.JLabel();
        txtAltemail = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        cLegacy = new javax.swing.JCheckBox();
        cLoyal = new javax.swing.JCheckBox();
        cAutoshiprev = new javax.swing.JCheckBox();
        cautoLegacy = new javax.swing.JCheckBox();
        cFMnominated = new javax.swing.JCheckBox();
        cOMnominated = new javax.swing.JCheckBox();
        cSAS = new javax.swing.JCheckBox();
        txtPackage = new javax.swing.JTextField();
        jLabel82 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        txtRemarks = new javax.swing.JTextField();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        txtLegal = new javax.swing.JTextField();
        CLOSE = new javax.swing.JButton();
        SAVE = new javax.swing.JButton();
        CLEAR = new javax.swing.JButton();
        Cashier = new javax.swing.JTextField();

        jButton1.setText("jButton1");

        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setTitle("Membership");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel6.setText("QDate");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel5.setText("isPSOL");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel4.setText("IPAC");

        txtOrigin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOriginActionPerformed(evt);
            }
        });

        cNewdealer.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cNewdealer.setForeground(new java.awt.Color(0, 102, 204));
        cNewdealer.setText("NEW DEALER");
        cNewdealer.setBorder(null);
        cNewdealer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cNewdealerActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel9.setText("BA NUMBER");

        txtMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField35ActionPerformed(evt);
            }
        });

        txtReciept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField41ActionPerformed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel40.setText("NAME TO APPEAR ON CHECK");

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel41.setText("BUSINESS ADDRESS");

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel42.setText("RECIPIENT");

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel43.setText("POWER PACK RECEIVED BY");

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel44.setText("MAX UP RECEIVED BY:");

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel45.setText("HOME ADDRESS");

        txtBusiness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField43ActionPerformed(evt);
            }
        });

        txtHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField44ActionPerformed(evt);
            }
        });

        txtAppear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField45ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel42)
                            .addComponent(jLabel43)
                            .addComponent(jLabel44))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtReciept, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                            .addComponent(txtMax, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPower, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBusiness)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(jLabel45))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAppear)
                            .addComponent(txtHome))))
                .addGap(10, 10, 10))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(txtAppear, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(txtHome, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(txtBusiness, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(txtReciept, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(txtPower, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(txtMax, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel10.setText("SPONSOR NUMBER");

        txtQdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQdateActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel15.setText("Middle Name");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel7.setText("Replacement for");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel14.setText("First Name");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel8.setText("Plus Date");

        txtReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReplaceActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel13.setText("Surname");

        txtBA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtBAMouseClicked(evt);
            }
        });
        txtBA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBAActionPerformed(evt);
            }
        });
        txtBA.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBAFocusGained(evt);
            }
        });
        txtBA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBAKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBAKeyReleased(evt);
            }
        });

        txtSponsor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSponsorMouseClicked(evt);
            }
        });
        txtSponsor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSponsorActionPerformed(evt);
            }
        });
        txtSponsor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSponsorKeyPressed(evt);
            }
        });

        txtPsponsor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPsponsorMouseClicked(evt);
            }
        });
        txtPsponsor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPsponsorActionPerformed(evt);
            }
        });
        txtPsponsor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPsponsorKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel11.setText("UPLINE NUMBER");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel12.setText("PLUS SPONSOR");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setText("Origin");

        txtFirst4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirst4ActionPerformed(evt);
            }
        });

        txtUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUPActionPerformed(evt);
            }
        });
        txtUP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUPKeyPressed(evt);
            }
        });

        txtFirst1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirst1ActionPerformed(evt);
            }
        });

        txtMiddle1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMiddle1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel3.setText("Account Type");

        panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel49.setText("GROUP");

        rGroupB.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rGroupB.setText("B");
        rGroupB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rGroupBActionPerformed(evt);
            }
        });

        rGroupA.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rGroupA.setText("A");
        rGroupA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rGroupAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rGroupA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rGroupB))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel49)
                .addComponent(rGroupB)
                .addComponent(rGroupA))
        );

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel50.setText("BirthDate");

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel51.setText("Power Pack");

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel52.setText("MaxUp Status");

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel53.setText("MaxUp Date");

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel54.setText("MaxUp ExpDate");

        jLabel55.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel55.setText("PIBA");

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel56.setText("Date PIBA");

        jLabel57.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel57.setText("Date Inactive");

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel58.setText("Status");

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel59.setText("Date Activated");

        jLabel60.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel60.setText("ID Power Card");

        jLabel61.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel61.setText("Payout Option");

        jLabel62.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel62.setText("Date Terminated/Blocked");

        jLabel63.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel63.setText("Team");

        jLabel64.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel64.setText("Delear's Category");

        jLabel66.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel66.setText("Blocked");

        jLabel67.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel67.setText("Terminated");

        txtTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeamActionPerformed(evt);
            }
        });
        txtTeam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTeamKeyPressed(evt);
            }
        });

        jLabel68.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel68.setText("MH Account");

        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel69.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel69.setText("SEX");

        rsexF.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rsexF.setText("F");
        rsexF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rsexFActionPerformed(evt);
            }
        });

        rsexM.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rsexM.setText("M");
        rsexM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rsexMActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rsexM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rsexF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel69)
                .addComponent(rsexF)
                .addComponent(rsexM))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cOM.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cOM.setText("OM");

        comDealer.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        comDealer.setText("OM-DEALER");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cOM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comDealer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cOM)
                .addComponent(comDealer))
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cFM.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cFM.setText("FM");

        cfmDealer.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cfmDealer.setText("FM-DEALER");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cFM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cfmDealer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cFM)
                    .addComponent(cfmDealer))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel70.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel70.setText("Known Upline");

        jLabel71.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel71.setText("Nationality");

        comCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "MARRIED", "SINGLE", "WIDOW" }));

        jLabel72.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel72.setText("Civil Status");

        jLabel73.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel73.setText("Telephone Number");

        jLabel74.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel74.setText("Office Phone");

        jLabel75.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel75.setText("Profession ");

        jLabel76.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel76.setText("TIN");

        jLabel79.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel79.setText("Mobile Number");

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel80.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel80.setText("Alternate Mobile Number");

        jLabel81.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel81.setText("Email Address");

        jLabel83.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel83.setText("Alternative Email Address");

        txtAltemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAltemailActionPerformed(evt);
            }
        });

        jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cLegacy.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cLegacy.setText("Is Legay");

        cLoyal.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cLoyal.setText("Is Loyal");

        cAutoshiprev.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cAutoshiprev.setText("Autoship Rev-Up");

        cautoLegacy.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cautoLegacy.setText("Autoship Legacy");

        cFMnominated.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cFMnominated.setText("FM Nominated");
        cFMnominated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cFMnominatedActionPerformed(evt);
            }
        });

        cOMnominated.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cOMnominated.setText("OM Nominated");

        cSAS.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        cSAS.setText("Is SAS");

        jLabel82.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel82.setText("IPackage Date");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cLegacy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cLoyal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cAutoshiprev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cautoLegacy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cFMnominated)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cOMnominated)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cSAS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(jLabel82, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(11, 11, 11))
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(txtPackage)
                        .addGap(2, 2, 2))))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addComponent(txtPackage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel82))
                    .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cLegacy)
                        .addComponent(cLoyal)
                        .addComponent(cAutoshiprev)
                        .addComponent(cautoLegacy)
                        .addComponent(cFMnominated)
                        .addComponent(cOMnominated)
                        .addComponent(cSAS)))
                .addGap(0, 0, 0))
        );

        jLabel84.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel84.setText("FOR IT USE ONLY");

        jPanel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel85.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel85.setText("REMARKS:");

        jLabel86.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel86.setText("LEGAL REMARKS:");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel86)
                    .addComponent(jLabel85))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRemarks, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLegal, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRemarks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel85))
                .addGap(2, 2, 2)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel86)
                    .addComponent(txtLegal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2))
        );

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel58)
                            .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtdateAct, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel59))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtdateInact, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel57))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel55)
                            .addComponent(txtPiba, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel56))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtdatePiba, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel60)
                            .addComponent(txtidPower, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(jLabel61)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(txtPayout)
                                .addContainerGap())))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel66)
                            .addComponent(txtBlocked, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTerminated, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel67))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel62, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtdateTermBlock))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel64)
                            .addComponent(txtDealer, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel63)
                            .addComponent(txtTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(jLabel68)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(txtMH)
                                .addContainerGap())))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(jLabel84)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel17, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLayout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel50)
                                    .addComponent(txtBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPPack, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel51))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel52)
                                    .addComponent(txtmaxStats, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtmaxDate, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel53))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(jLabel54)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtexpDate)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLayout.createSequentialGroup()
                                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(jLabel72)
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelLayout.createSequentialGroup()
                                                .addGap(44, 44, 44)
                                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtTelnum, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel73))
                                                .addGap(6, 6, 6)
                                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtOffice, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel74))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel75)
                                                    .addComponent(txtProf, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(panelLayout.createSequentialGroup()
                                                        .addComponent(jLabel76)
                                                        .addGap(0, 0, Short.MAX_VALUE))
                                                    .addComponent(txtTIN)))
                                            .addGroup(panelLayout.createSequentialGroup()
                                                .addGap(125, 125, 125)
                                                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(panelLayout.createSequentialGroup()
                                                        .addGap(4, 4, 4)
                                                        .addComponent(jLabel83)
                                                        .addGap(0, 0, Short.MAX_VALUE))
                                                    .addGroup(panelLayout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(txtAltemail))))))
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelLayout.createSequentialGroup()
                                                .addComponent(jLabel70)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(txtKnown)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel79))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtAltnum, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel80)))
                                    .addComponent(jLabel71)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addComponent(txtNationality, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel81)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtmaxStats, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtmaxDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtexpDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPPack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel52)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel53)
                                .addComponent(jLabel54))
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel50)
                                .addComponent(jLabel51)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtdateAct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtidPower, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPiba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtdateInact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPayout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtdatePiba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel58)
                            .addComponent(jLabel59)
                            .addComponent(jLabel57)
                            .addComponent(jLabel55)
                            .addComponent(jLabel56)
                            .addComponent(jLabel60)
                            .addComponent(jLabel61))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTerminated, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDealer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtBlocked, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtdateTermBlock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel66)
                            .addComponent(jLabel67)
                            .addComponent(jLabel62)
                            .addComponent(jLabel64)
                            .addComponent(jLabel63)
                            .addComponent(jLabel68))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(txtKnown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3)
                                .addComponent(jLabel70)))
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNationality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTelnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtOffice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel71)
                            .addComponent(jLabel72)
                            .addComponent(jLabel73)
                            .addComponent(jLabel76)
                            .addComponent(jLabel75))
                        .addGap(1, 1, 1)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAltnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAltemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addComponent(jLabel74)
                        .addGap(18, 18, 18)))
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel79)
                    .addComponent(jLabel80)
                    .addComponent(jLabel81)
                    .addComponent(jLabel83))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel84)
                .addGap(2, 2, 2)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        CLOSE.setText("CLOSE");
        CLOSE.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CLOSE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLOSEActionPerformed(evt);
            }
        });

        SAVE.setText("SAVE");
        SAVE.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        SAVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SAVEActionPerformed(evt);
            }
        });

        CLEAR.setText("CLEAR");
        CLEAR.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CLEARActionPerformed(evt);
            }
        });

        Cashier.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Cashier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CashierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(SAVE, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CLEAR, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CLOSE, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119)
                        .addComponent(Cashier, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtOrigin, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtIpac, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtPSOL, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtReplace, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8)
                                .addComponent(txtPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(txtQdate, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel12)
                                                .addComponent(jLabel11))
                                            .addGap(10, 10, 10))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtBA, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtUP, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPsponsor, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtSponsor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtsur3)
                                        .addComponent(txtsur4)
                                        .addComponent(txtsur2)
                                        .addComponent(txtsur1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(5, 5, 5))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cNewdealer)
                                    .addGap(141, 141, 141)
                                    .addComponent(jLabel13)
                                    .addGap(112, 112, 112)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtFirst3)
                                    .addComponent(txtFirst2)
                                    .addComponent(txtFirst1)
                                    .addComponent(txtFirst4, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel14))
                            .addGap(5, 5, 5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtMiddle3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                    .addComponent(txtMiddle2, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtMiddle1, javax.swing.GroupLayout.Alignment.LEADING))
                                .addComponent(txtMiddle4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(12, 12, 12)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOrigin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIpac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPSOL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReplace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtsur1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFirst1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(3, 3, 3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtsur2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFirst2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtMiddle2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(3, 3, 3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtsur3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFirst3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(3, 3, 3)
                            .addComponent(txtFirst4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtBA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9))
                            .addGap(3, 3, 3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtUP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11))
                            .addGap(2, 2, 2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtSponsor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10))
                            .addGap(3, 3, 3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtPsponsor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtsur4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel12))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtMiddle1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(txtMiddle3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(txtMiddle4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(jLabel15))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(cNewdealer)))
                .addGap(4, 4, 4)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SAVE)
                    .addComponent(CLOSE)
                    .addComponent(CLEAR)
                    .addComponent(Cashier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFirst1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirst1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirst1ActionPerformed

    private void txtFirst4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirst4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirst4ActionPerformed

    private void txtQdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQdateActionPerformed

    private void jTextField45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField45ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField45ActionPerformed

    private void jTextField44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField44ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField44ActionPerformed

    private void jTextField43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField43ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField43ActionPerformed

    private void jTextField41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField41ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField41ActionPerformed

    private void jTextField35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField35ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField35ActionPerformed

    private void cNewdealerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cNewdealerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cNewdealerActionPerformed

    private void txtOriginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOriginActionPerformed
    
    }//GEN-LAST:event_txtOriginActionPerformed

    private void txtBAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBAActionPerformed
        Connection conn_obj = OracleSqlConnect.ConnectDB();       
        SimpleDateFormat date_plus = new SimpleDateFormat("dd-MMM-yyyy");
        SimpleDateFormat date_birth = new SimpleDateFormat("dd-MMM-yyyy");
        SimpleDateFormat date_max = new SimpleDateFormat("dd-MMM-yyyy");
        s_ba = String.format("%8s",txtBA.getText());
        s_ba = s_ba.replace(' ','0');
        txtBA.setText(s_ba);
        s_ba = txtBA.getText().trim();
        
        try{
         String search_sql = "SELECT *  "
                 + "FROM DEV.MEMBER1 M1 "
                 + "INNER JOIN MEMBER3 M3 ON M1.IDNO = M3.IDNO "
                 + "WHERE M1.IDNO= '"+s_ba+"'";
         PreparedStatement stmt_search = conn_obj.prepareStatement(search_sql);
         ResultSet rs_search = stmt_search.executeQuery(); 
                 
           int a = 0;
           while(rs_search.next()){
            a++;
            
            s_ba = rs_search.getString("IDNO");
            s_origin = rs_search.getString("ORGN");
            s_account = rs_search.getString("ACCT_CATEG");
            s_ipac = rs_search.getString("IAP");
            s_psol = rs_search.getString("ISPSOL");
            s_replace = rs_search.getString("CATEG");
            Date_Plus = rs_search.getDate("PLUSDATE");
            if(Date_Plus == null)
                {
                    s_plus = "";
                }
                else
                {
                   s_plus = date_plus.format(Date_Plus);
                }
            Date_Q = rs_search.getDate("MDATE");
            if(Date_Q == null)
            {
                s_qdate = "";
            }
            else{
                s_qdate = date_plus.format(Date_Q);        
                }
             s_upline = rs_search.getString("UPLNO");
             s_sponsor = rs_search.getString("SPNO");
             s_plusponsor = rs_search.getString("SPNOPLUS");
             s_sur1 = rs_search.getString("SNAME");
             s_fname1 = rs_search.getString("FNAME");
             s_m1 = rs_search.getString("MNAME");
            
             s_namecheck = rs_search.getString("CHK_RECIP");
             s_home = rs_search.getString("HOMEADD");
             s_business = rs_search.getString("BUSADD");
             s_recip = rs_search.getString("RECIP");
             s_powerby = rs_search.getString("PLUSPACK_REC");
             s_maxup = rs_search.getString("MAXUP_CLAIMEDBY");
             s_ga = rs_search.getString("GRP");
             Date_Birth = rs_search.getDate("BDATE");
             if(Date_Birth == null)
                {
                    s_bdate = "";
                }
                else
                {
                   s_bdate = date_birth.format(Date_Birth);
                }
             s_ppack = rs_search.getString("ISPLUSPACK");
             s_maxstats = rs_search.getString("MAXSTAT");
             Date_Max = rs_search.getDate("MAXUPDATE");
             if(Date_Max == null)
                {
                    s_maxdate = "";
                }
                else
                {
                    s_maxdate = date_max.format(Date_Max);
                }
             Date_Exp = rs_search.getDate("MAXUP_EXPDATE");
               if(Date_Exp == null)
                {
                    s_expdate = "";
                }
                else
                {
                   s_expdate = date_max.format(Date_Exp);
                }
               s_stats = rs_search.getString("ISACTIVE_PLUS");
                Date_Act = rs_search.getDate("DTE_ACTIVE");
             if(Date_Act == null)
                {
                    s_actdate = "";
                }
                else
                {
                    s_actdate = date_max.format(Date_Act);
                }
              Date_Inc = rs_search.getDate("DTE_INACTIVE");
             if(Date_Inc == null)
                {
                    s_incdate = "";
                }
                else
                {
                    s_incdate = date_max.format(Date_Inc);
                }
               s_piba = rs_search.getString("ISPIBA");
               Date_Piba = rs_search.getDate("DTE_PIBA");
             if(Date_Piba == null)
                {
                    s_datepiba= "";
                }
                else
                {
                    s_datepiba = date_max.format(Date_Piba);
                }
               s_idpcard = rs_search.getString("IDNO_POWERCARD");
               s_payout = rs_search.getString("PAYOUT");
               s_banktrans = rs_search.getString("ISBANK_TRANSFER_OK"); 
               s_blocked = rs_search.getString("ISBLOCK");
               s_term = rs_search.getString("ISTERMINATED");        
               Date_DTB = rs_search.getDate("DTE_TERMINATED");
             if(Date_DTB == null)
                {
                    s_dtb= "";
                }
                else
                {
                    s_dtb = date_max.format(Date_DTB);
                }
                s_dealcat = rs_search.getString("IMOVE");
                s_team = rs_search.getString("TEAM");
                s_mh = rs_search.getString("MH_ACCT");
                s_sex = rs_search.getString("SEX");
                s_om = rs_search.getString("ISPA_SPONSOR");
                s_omdeal = rs_search.getString("ISOM_DEALER");
                s_fm = rs_search.getString("ISFM_SPONSOR");
                s_fmdeal = rs_search.getString("ISFM_DEALER");
                s_known = rs_search.getString("KNOWNUPLINE");
                s_nationality = rs_search.getString("NATION"); 
                s_civilstat = rs_search.getString("CSTAT"); 
                s_tnumber = rs_search.getString("HOMPHON");
                s_offphone = rs_search.getString("OFFPHON");
                s_profession = rs_search.getString("PROF");
                s_tin = rs_search.getString("TIN");
                s_mobphone = rs_search.getString("MOBPHON");
                s_altphone = rs_search.getString("MOBPHON2");
                s_email = rs_search.getString("EMAIL_ADD");
                s_altemail = rs_search.getString("EMAIL_ADD2");
                s_legacy = rs_search.getString("ISLEGACY");
                s_loyal = rs_search.getString("ISLOYAL");
                s_autoship = rs_search.getString("ISAUTOSHIP");
                s_autorev = rs_search.getString("ISAUTOSHIP_REVUP");
                s_omnominated = rs_search.getString("ISOM_NOMINATED");
                s_fmnominated = rs_search.getString("ISFM_NOMINATED");
                s_isas = rs_search.getString("IS_SAS");
                Date_ISAS = rs_search.getDate("IPACKAGE_DTE");
                if(Date_ISAS == null)
                {
                    s_packagedate= "";
                }
                else
                {
                   s_packagedate = date_max.format(Date_ISAS);
                }
                s_rem = rs_search.getString("REM");
                
                
                }  
               
            
          //IF ELSE DISPLAY THE DIFFERENT NAME VALUES IN SQL, INSERT STRING SQL INSIDE THE FIRST ELSE AFTER IF// 
           if (s_ba.length() == 0 || s_ba.equals("00000000")){  
                 JTextField[] textFields = {
                    txtOrigin, txtAccount, txtIpac, txtPSOL, txtReplace, txtPlus, txtQdate, txtUP, 
                    txtSponsor, txtPsponsor, txtsur1, txtsur2, txtsur3, txtsur4, txtFirst1, txtFirst2, 
                    txtFirst3, txtFirst4, txtMiddle1, txtMiddle2, txtMiddle3, txtMiddle4, txtAppear,txtHome,
                    txtBusiness, txtReciept, txtPower, txtMax,  txtBirth, txtPPack, txtmaxStats, txtmaxDate,
                    txtexpDate, txtStatus,  txtdateAct, txtdateInact, txtPiba, txtdatePiba, txtidPower, txtPayout,
                    txtBlocked, txtTerminated, txtdateTermBlock, txtDealer, txtTeam, txtMH, txtKnown, txtNationality,
                    txtTelnum, txtOffice, txtProf, txtTIN, txtMobile, txtAltnum, txtEmail, txtAltemail, txtPackage, 
                    txtRemarks, txtLegal

                    };
                    for (JTextField textField : textFields) {
                        textField.setText("");
                        textField.setEditable(false);
                     }
                   JCheckBox[] checkboxes = {
                    cNewdealer, cOM, comDealer, cFM, cfmDealer, cLegacy, cLoyal,
                    cAutoshiprev, cautoLegacy, cFMnominated, cOMnominated, cSAS
                           
                    };
                    for (JCheckBox checkbox : checkboxes) {
                        checkbox.setSelected(false);
                        checkbox.setEnabled(false);
                    }
                   JRadioButton[] radioButtons = {rsexM, rsexF, rGroupA, rGroupB};

                    for (JRadioButton radioButton : radioButtons) {
                        radioButton.setSelected(false);
                        radioButton.setEnabled(false);
                    } 
                  
                    comCivil.setSelectedItem(null); 
                    comCivil.setEnabled(false);
                    
                    
                    txtBA.setText("");
                   JOptionPane.showMessageDialog(null, "Input BA.","Error", JOptionPane.INFORMATION_MESSAGE);           
           }
           else{
               
           if(a > 0){   
           txtBA.setText(s_ba);
           txtOrigin.setText(s_origin);
           txtAccount.setText(s_account);
           if("V".equals(s_ipac)){
              txtIpac.setText("V");
           }else if("C".equals(s_ipac)){
              txtIpac.setText("C");
           }else if("E".equals(s_ipac)){
              txtIpac.setText("E");
           }else{
            txtIpac.setText(null);
           }
           txtPSOL.setText(s_psol);
           txtReplace.setText(s_replace);
           txtPlus.setText(s_plus);
           txtQdate.setText(s_qdate);
           txtUP.setText(s_upline);
           txtSponsor.setText(s_sponsor);
           txtPsponsor.setText(s_plusponsor);
           txtsur1.setText(s_sur1);
           txtFirst1.setText(s_fname1);
           txtMiddle1.setText(s_m1);
           txtAppear.setText(s_namecheck);
           txtHome.setText(s_home);
           txtBusiness.setText(s_business);
           txtReciept.setText(s_recip);
           txtPower.setText(s_powerby);
           txtMax.setText(s_maxup);
           if("1".equals(s_ga)) {
              rGroupA.setSelected(true);
                 } 
           else{
             rGroupA.setSelected(false);
           }
           if("2".equals(s_ga)) {
             rGroupB.setSelected(true);
                 }
           else{
             rGroupB.setSelected(false);
           }
           txtBirth.setText(s_bdate);  
           if("T".equals(s_ppack)){
            txtPPack.setText("CLAIMED");
           }
           else{
              txtPPack.setText(null);  
           }
           
           if("T".equals(s_maxstats)){
            txtmaxStats.setText("ACTIVE");
           }
           else if("F".equals(s_maxstats)){
              txtmaxStats.setText("PIMUP");  
           }
           else if("R".equals(s_maxstats)){
              txtmaxStats.setText("INACTIVE");  
           }
           else if("N".equals(s_maxstats)){
              txtmaxStats.setText("NOT APPLICABLE");  
           }
           else{
             txtmaxStats.setText(null);
           }
           txtmaxDate.setText(s_maxdate);
           txtexpDate.setText(s_expdate);
           if("T".equals(s_stats)){
            txtStatus.setText("ABA");
           }
           else if("F".equals(s_stats)){
            txtStatus.setText("IBA");  
           }
           else{
            txtStatus.setText(null);
           }
           txtdateAct.setText(s_actdate);
           txtdateInact.setText(s_incdate);
           if("T".equals(s_piba)){
            txtPiba.setText("PIBA");
           }
           else{
             txtPiba.setText(null);
           }
          txtdatePiba.setText(s_datepiba);
          txtidPower.setText(s_idpcard);
          if("R".equals(s_payout)){
              if(s_banktrans == null || "F".equals(s_banktrans)){
                   txtPayout.setText("POWERWALLET");
                }else{
                   txtPayout.setText("BANK AUTOCREDIT");
                     }
                      }else{
                         txtPayout.setText("WEEKLY CHECK");
                       }
          if("T".equals(s_blocked) && "T".equals(s_term)){
              txtBlocked.setText("BLOCKED");
              txtTerminated.setText("TERMINATED");
                }else if ("T".equals(s_blocked) && ("F".equals(s_term) || s_term == null || " ".equals(s_term))){
                             txtBlocked.setText("BLOCKED");
                               txtTerminated.setText(null);
                   }else if ("F".equals(s_blocked)|| " ".equals(s_blocked) || s_blocked == null
                               && ("F".equals(s_term) || s_term == null || " ".equals(s_term))){
                                    txtBlocked.setText(null);
                                           txtTerminated.setText(null);
                             }else if (" ".equals(s_blocked) || s_blocked == null ||"F".equals(s_blocked) 
                                     && (" ".equals(s_term) || s_term == null || "F".equals(s_term))){
                                            txtBlocked.setText(null);
                                                  txtTerminated.setText(null);
                                               }
            txtdateTermBlock.setText(s_dtb);                     
            if("0".equals(s_dealcat)){
                txtDealer.setText("Online Local");  
                 }else if("1".equals(s_dealcat)){
                    txtDealer.setText("iMove Operator");  
                      }else if("2".equals(s_dealcat)){
                        txtDealer.setText("Move Operator");  
                        }else if("3".equals(s_dealcat)){
                           txtDealer.setText("APPP");  
                             }else if("5".equals(s_dealcat)){
                                    txtDealer.setText("Air Mover");  
                                      }else if("6".equals(s_dealcat)){
                                        txtDealer.setText("iMove Dealer");  
                                        }else if("7".equals(s_dealcat)){
                                           txtDealer.setText("Move Dealer");  
                                            }else if("8".equals(s_dealcat)){
                                                txtDealer.setText("Move Online Dealer");  
                                                }else if("9".equals(s_dealcat)){
                                                    txtDealer.setText("Online INTL");  
                                                      }else if("10".equals(s_dealcat)){
                                                        txtDealer.setText("Online INTL-PW");  
                                                             }else if("11".equals(s_dealcat)){
                                                                 txtDealer.setText("Online LOCAL-PW");  
                                                                    }else{
                                                                       txtDealer.setText("REGULAR");  
                                                                       }   
            txtTeam.setText(s_team);
            txtMH.setText(s_mh);
            if("1".equals(s_sex)) {
              rsexM.setSelected(true);
                 } 
            else{
             rsexM.setSelected(false);
              }
            if("2".equals(s_sex)) {
              rsexF.setSelected(true);
                 } 
            else{
             rsexF.setSelected(false);
               }
            if ("T".equals(s_om)) {
               cOM.setSelected(true);
                }
            else {
                cOM.setSelected(false);
                }
             if ("T".equals(s_omdeal)) {
               comDealer.setSelected(true);
                }
            else {
                comDealer.setSelected(false);
                }
            if ("T".equals(s_fm)) {
               cFM.setSelected(true);
                }
            else {
               cFM.setSelected(false);
                }
            if ("T".equals(s_fmdeal)) {
               cfmDealer.setSelected(true);
                }
            else {
               cfmDealer.setSelected(false);
                }
            txtKnown.setText(s_known);
            txtNationality.setText(s_nationality);
            if("1".equals(s_civilstat)){
             comCivil.setSelectedItem("SINGLE");
            }
            else if("2".equals(s_civilstat)){
             comCivil.setSelectedItem("MARRIED");
            }
            else if("3".equals(s_civilstat)){
             comCivil.setSelectedItem("WIDOW");
            }
            else if("4".equals(s_civilstat)){
             comCivil.setSelectedItem(null);
            }
            else{
             comCivil.setSelectedItem(null);
            }
            txtTelnum.setText(s_tnumber);
            txtOffice.setText(s_offphone);
            txtProf.setText(s_profession);
            txtTIN.setText(s_tin);
            txtMobile.setText(s_mobphone);
            txtAltnum.setText(s_altphone);
            txtEmail.setText(s_email);
            txtAltemail.setText(s_altemail);
            if("T".equals(s_loyal)) {
             cLoyal.setSelected(true);
                 } 
            else{
             cLoyal.setSelected(false);
              }
            if("T".equals(s_legacy)) {
             cLegacy.setSelected(true);
                 } 
            else{
             cLegacy.setSelected(false);
              }
            if("T".equals(s_autorev)) {
             cAutoshiprev.setSelected(true);
                 } 
            else{
             cAutoshiprev.setSelected(false);
              }
            if("T".equals(s_autoship)) {
             cautoLegacy.setSelected(true);
                 } 
            else{
             cautoLegacy.setSelected(false);
              }
            if("T".equals(s_fmnominated)) {
             cFMnominated.setSelected(true);
                 } 
            else{
             cFMnominated.setSelected(false);
              }
            if("T".equals(s_omnominated)) {
             cOMnominated.setSelected(true);
                 } 
            else{
             cOMnominated.setSelected(false);
              }
            if("T".equals(s_isas)) {
              cSAS.setSelected(true);
                 } 
            else{
              cSAS.setSelected(false);
              } 
            txtPackage.setText(s_packagedate);
            txtRemarks.setText(s_rem);
            

        if(s_upline == null){
            txtsur2.setText(null);
            txtFirst2.setText(null);
            txtMiddle2.setText(null);
           }
           else{
                 String search_sql2 = "SELECT * FROM MEMBER1 WHERE IDNO = '"+s_upline+"'";
                 PreparedStatement stmt_search2 = conn_obj.prepareStatement(search_sql2); 
                 ResultSet rs_search2 = stmt_search2.executeQuery();
                 int b = 0;
                 while(rs_search2.next()){
                     b++;
                     
                     s_upline = rs_search2.getString("UPLNO");
                     s_sur2 = rs_search2.getString("SNAME");
                     s_fname2 = rs_search2.getString("FNAME");
                     s_m2 = rs_search2.getString("MNAME");
                 }
                 
                 if(b > 0){
                     txtsur2.setText(s_sur2);
                     txtFirst2.setText(s_fname2);
                     txtMiddle2.setText(s_m2);
                 }
                }
           if(s_sponsor == null){
            txtsur3.setText(null);
            txtFirst3.setText(null);
            txtMiddle3.setText(null);
           }
           else{
             
                 String search_sql3 = "SELECT * FROM MEMBER1 WHERE IDNO = '"+s_sponsor+"'";
                 PreparedStatement stmt_search3 = conn_obj.prepareStatement(search_sql3); 
                 ResultSet rs_search3 = stmt_search3.executeQuery();
                 int c = 0;
                 while(rs_search3.next()){
                     c++;
                     
                     s_sponsor = rs_search3.getString("SPNO");
                     s_sur3 = rs_search3.getString("SNAME");
                     s_fname3 = rs_search3.getString("FNAME");
                     s_m3 = rs_search3.getString("MNAME");
                 }
                 
                 if(c > 0){
                     txtsur3.setText(s_sur3);
                     txtFirst3.setText(s_fname3);
                     txtMiddle3.setText(s_m3);
                 }
             }
           if(s_plusponsor == null){
            txtsur4.setText(null);
            txtFirst4.setText(null);
            txtMiddle4.setText(null);
           }
           else{
                 String search_sql4 = "SELECT * FROM MEMBER1 WHERE IDNO = '"+s_plusponsor+"'";
                 PreparedStatement stmt_search4 = conn_obj.prepareStatement(search_sql4); 
                 ResultSet rs_search4 = stmt_search4.executeQuery();
                 int d = 0;
                 while(rs_search4.next()){
                     d++;
                     
                     s_plusponsor = rs_search4.getString("SPNO");
                     s_sur4 = rs_search4.getString("SNAME");
                     s_fname4 = rs_search4.getString("FNAME");
                     s_m4 = rs_search4.getString("MNAME");
                 }
                 
                 if(d > 0){
                     txtsur4.setText(s_sur4);
                     txtFirst4.setText(s_fname4);
                     txtMiddle4.setText(s_m4);
                 }
                }
            if (!txtBA.getText().isEmpty()) {
                String search_sql5 = "SELECT * FROM ORPAID WHERE IDNO = '"+s_ba+"'"
                + "AND TRNSCT NOT IN (10, 78, 47, 48, 49, 172)"
                + "AND ISCANCEL = 'F'";
                PreparedStatement stmt_search5 = conn_obj.prepareStatement(search_sql5);
                ResultSet rs_search5 = stmt_search5.executeQuery();
                 int e = 0;
                 while(rs_search5.next()){
                     e++;  
                     s_newdeal = rs_search5.getString("NEW_DEALER");    
                     }
                    if (e > 0) {
                   
                    if ("T".equals(s_newdeal)) {
                        cNewdealer.setSelected(true);
                    } 
                    else {
                        cNewdealer.setSelected(false);
                    }               
                }
                }
                else if("F".equals(s_isas) || s_isas == null){
                         cNewdealer.setSelected(false);
                      }
                else{
                     cNewdealer.setSelected(false);
                }
            
             if(!txtBA.getText().isEmpty()){
                String countQuery = "SELECT COUNT(1) FROM  HALL_OF_FAMER WHERE idno = ?";
                PreparedStatement countStatement = conn_obj.prepareStatement(countQuery);
                countStatement.setString(1, s_ba);
                ResultSet countResult = countStatement.executeQuery();
             
                if (countResult.next()) {
                    nCnt = countResult.getInt(1);
                } 
                 if (nCnt > 0) {
              
                String categoryQuery1 = "SELECT CATEG FROM HALL_OF_FAMER WHERE idno = ?";
                PreparedStatement categoryStatement = conn_obj.prepareStatement(categoryQuery1);
                categoryStatement.setString(1, s_ba); 
                ResultSet categoryResult = categoryStatement.executeQuery();
               
                if (categoryResult.next()) {
                    s_hofcateg = categoryResult.getString("CATEG");
                }
                   if (!"MOVE".equals(s_hofcateg) && s_hofcateg != null) {
                       txtDealer.setText(s_hofcateg);
                        if ("REGULAR".equals(s_hofcateg)) {
                             txtDealer.setText(s_hofcateg);
                        }else{
                            txtDealer.setText(s_dealcat+"/"+ s_hofcateg);
                        } 
                }             
                }
        
             }       
      
             if(!txtBA.getText().isEmpty()){
                 String search_sql7 = "SELECT * FROM BLOCK_BA WHERE IDNO = '"+s_ba+"' "
                 + "ORDER BY DTE_UPDATE, TRANTIME DESC";
                 PreparedStatement stmt_search7 = conn_obj.prepareStatement(search_sql7); 
                 ResultSet rs_search7 = stmt_search7.executeQuery();
                 int f = 0;
                 while(rs_search7.next()){
                     f++;
                     
                    s_remlegal = rs_search7.getString("REM");
                }
                 if(f > 0){
                     txtLegal.setText(s_remlegal);
                 }
               }
             
      
             
            JTextField[] textFields = {
                txtOrigin, txtAccount, txtIpac, txtPSOL, txtReplace, txtPlus, txtQdate, txtUP, 
                txtSponsor, txtPsponsor, txtsur1, txtsur2, txtsur3, txtsur4, txtFirst1, txtFirst2, 
                txtFirst3, txtFirst4, txtMiddle1, txtMiddle2, txtMiddle3, txtMiddle4, txtAppear,txtHome,
                txtBusiness, txtReciept, txtPower, txtMax,  txtBirth, txtPPack, txtmaxStats, txtmaxDate,
                txtexpDate, txtStatus,  txtdateAct, txtdateInact, txtPiba, txtdatePiba, txtidPower, txtPayout,
                txtBlocked, txtTerminated, txtdateTermBlock, txtDealer, txtTeam, txtMH, txtKnown, txtNationality,
                txtTelnum, txtOffice, txtProf, txtTIN, txtMobile, txtAltnum, txtEmail, txtAltemail, txtPackage, 
                txtRemarks, txtLegal
            };
            for (JTextField textField : textFields) {
                textField.setEditable(true);
             }     
            
            JCheckBox[] checkboxes = {
            cNewdealer, cOM, comDealer, cFM, cfmDealer, cLegacy, cLoyal,
            cAutoshiprev, cautoLegacy, cFMnominated, cOMnominated, cSAS

              };
            for (JCheckBox checkbox : checkboxes) {
                 checkbox.setEnabled(true);
            }
            JRadioButton[] radioButtons = {rsexM, rsexF, rGroupA, rGroupB};

            for (JRadioButton radioButton : radioButtons) {
                 radioButton.setEnabled(true);
             } 
            
              comCivil.setEnabled(true);
            }
           else {
              JOptionPane.showMessageDialog(null, "BA DOES NOT EXIST!","Error", JOptionPane.INFORMATION_MESSAGE);  
                JTextField[] textFields = {
                txtOrigin, txtAccount, txtIpac, txtPSOL, txtReplace, txtPlus, txtQdate, txtUP, 
                txtSponsor, txtPsponsor, txtsur1, txtsur2, txtsur3, txtsur4, txtFirst1, txtFirst2, 
                txtFirst3, txtFirst4, txtMiddle1, txtMiddle2, txtMiddle3, txtMiddle4, txtAppear,txtHome,
                txtBusiness, txtReciept, txtPower, txtMax,  txtBirth, txtPPack, txtmaxStats, txtmaxDate,
                txtexpDate, txtStatus,  txtdateAct, txtdateInact, txtPiba, txtdatePiba, txtidPower, txtPayout,
                txtBlocked, txtTerminated, txtdateTermBlock, txtDealer, txtTeam, txtMH, txtKnown, txtNationality,
                txtTelnum, txtOffice, txtProf, txtTIN, txtMobile, txtAltnum, txtEmail, txtAltemail, txtPackage, 
                txtRemarks, txtLegal
            };
            for (JTextField textField : textFields) {
                textField.setEditable(false);
                textField.setText("");        
             }       
              JCheckBox[] checkboxes = {
            cNewdealer, cOM, comDealer, cFM, cfmDealer, cLegacy, cLoyal,
            cAutoshiprev, cautoLegacy, cFMnominated, cOMnominated, cSAS

              };
            for (JCheckBox checkbox : checkboxes) {
                 checkbox.setSelected(false);
                 checkbox.setEnabled(false);
            }
            JRadioButton[] radioButtons = {rsexM, rsexF, rGroupA, rGroupB};

            for (JRadioButton radioButton : radioButtons) {
                 radioButton.setSelected(false);
                 radioButton.setEnabled(false);
             }    
              comCivil.setSelectedItem(null); 
              comCivil.setEnabled(false);
           }
           
           }
             rs_search.close();
             stmt_search.close();
             conn_obj.close();
             
              } catch (SQLException ex) {
             Logger.getLogger(MEMBERS.class.getName()).log(Level.SEVERE, null, ex);
              }
        
     

    }//GEN-LAST:event_txtBAActionPerformed

    private void cFMnominatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cFMnominatedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cFMnominatedActionPerformed

    private void txtAltemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAltemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAltemailActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void rsexMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rsexMActionPerformed
          if (rsexM.isSelected()) {
          rsexF.setSelected(false);
    }
    }//GEN-LAST:event_rsexMActionPerformed

    private void rsexFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rsexFActionPerformed
       if (rsexF.isSelected()) {
          rsexM.setSelected(false);
    }
    }//GEN-LAST:event_rsexFActionPerformed

    private void rGroupAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rGroupAActionPerformed
      if (rGroupA.isSelected()) {
          rGroupB.setSelected(false);
    }
    }//GEN-LAST:event_rGroupAActionPerformed

    private void rGroupBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rGroupBActionPerformed
        if (rGroupB.isSelected()) {
           rGroupA.setSelected(false);
    }
    }//GEN-LAST:event_rGroupBActionPerformed

    private void txtBAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBAKeyReleased
         if (!(Pattern.matches("^[a-zA-Z0-9\\s-]*$", txtBA.getText()))) {
         txtBA.setText("");
         JOptionPane.showMessageDialog(null, "Special Character is invalid.","Error", JOptionPane.INFORMATION_MESSAGE);
        }
        
   

    }//GEN-LAST:event_txtBAKeyReleased

    private void txtBAKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBAKeyPressed
       // limit to 8 characters will no longer add characters once it reaches 8
        txtBA.addKeyListener(new KeyAdapter() {
        @Override
        public void keyTyped(KeyEvent evt) {
            if ( txtBA.getText().length() >= 8 ) 
                evt.consume();
        }
    });  
 
     
    }//GEN-LAST:event_txtBAKeyPressed

    private void CLOSEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLOSEActionPerformed
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_CLOSEActionPerformed

    private void txtUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUPActionPerformed
        s_upline = String.format("%8s",txtUP.getText());
        s_upline = s_upline.replace(' ','0');
        txtUP.setText(s_upline);
        
        
        Connection conn_obj = OracleSqlConnect.ConnectDB();
        if(s_upline == null){
            JOptionPane.showMessageDialog(null, "NO UPLINE.","Error", JOptionPane.INFORMATION_MESSAGE);       
           }
           else{
             try {
                 String search_sql2 = "SELECT * FROM MEMBER1 WHERE IDNO = '"+s_upline+"'";
                 PreparedStatement stmt_search2 = conn_obj.prepareStatement(search_sql2); 
                 ResultSet rs_search2 = stmt_search2.executeQuery();
                 int b = 0;
                 while(rs_search2.next()){
                     b++;
                     
                     s_upline = rs_search2.getString("UPLNO");
                     s_sur2 = rs_search2.getString("SNAME");
                     s_fname2 = rs_search2.getString("FNAME");
                     s_m2 = rs_search2.getString("MNAME");
                 }
                 
                 if(b > 0){
                     txtsur2.setText(s_sur2);
                     txtFirst2.setText(s_fname2);
                     txtMiddle2.setText(s_m2);
                 }
             } catch (SQLException ex) {
                 Logger.getLogger(MEMBERS.class.getName()).log(Level.SEVERE, null, ex);
             }
                 
           }
    }//GEN-LAST:event_txtUPActionPerformed

    private void txtSponsorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSponsorActionPerformed
        s_sponsor = String.format("%8s",txtSponsor.getText());
        s_sponsor = s_sponsor.replace(' ','0');
        txtSponsor.setText(s_sponsor);
           Connection conn_obj = OracleSqlConnect.ConnectDB();
        if(s_sponsor == null){
            JOptionPane.showMessageDialog(null, "NO SPONSOR.","Error", JOptionPane.INFORMATION_MESSAGE);       
           }
           else{
             try {
                 String search_sql3 = "SELECT * FROM MEMBER1 WHERE IDNO = '"+s_sponsor+"'";
                 PreparedStatement stmt_search2 = conn_obj.prepareStatement(search_sql3); 
                 ResultSet rs_search3 = stmt_search2.executeQuery();
                 int c = 0;
                 while(rs_search3.next()){
                     c++;
                     
                     s_sponsor = rs_search3.getString("SPNO");
                     s_sur3 = rs_search3.getString("SNAME");
                     s_fname3 = rs_search3.getString("FNAME");
                     s_m3 = rs_search3.getString("MNAME");
                 }
                 
                 if(c > 0){
                     txtsur3.setText(s_sur3);
                     txtFirst3.setText(s_fname3);
                     txtMiddle3.setText(s_m3);
                 }
             } catch (SQLException ex) {
                 Logger.getLogger(MEMBERS.class.getName()).log(Level.SEVERE, null, ex);
             }
                 
           }
   
    }//GEN-LAST:event_txtSponsorActionPerformed

    private void txtUPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUPKeyPressed
           txtUP.addKeyListener(new KeyAdapter() {
           @Override
             public void keyTyped(KeyEvent evt) {
                 if ( txtUP.getText().length() >= 8 ) 
                      evt.consume();
        }
    });  
 
    }//GEN-LAST:event_txtUPKeyPressed

    private void txtSponsorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSponsorKeyPressed
          txtSponsor.addKeyListener(new KeyAdapter() {
           @Override
             public void keyTyped(KeyEvent evt) {
                 if ( txtSponsor.getText().length() >= 8 ) 
                      evt.consume();
        }
    });  
 
    }//GEN-LAST:event_txtSponsorKeyPressed

    private void txtPsponsorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPsponsorKeyPressed
         txtPsponsor.addKeyListener(new KeyAdapter() {
           @Override
             public void keyTyped(KeyEvent evt) {
                 if ( txtPsponsor.getText().length() >= 8 ) 
                      evt.consume();
        }
    });  
 
    }//GEN-LAST:event_txtPsponsorKeyPressed

    private void txtPsponsorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPsponsorActionPerformed
        s_plusponsor = String.format("%8s",txtPsponsor.getText());
        s_plusponsor = s_plusponsor.replace(' ','0');
        txtPsponsor.setText(s_plusponsor);
          Connection conn_obj = OracleSqlConnect.ConnectDB();
        if(s_plusponsor == null){
            JOptionPane.showMessageDialog(null, "NO PLUS SPONSOR.","Error", JOptionPane.INFORMATION_MESSAGE);       
           }
           else{
             try {
                 String search_sql4 = "SELECT * FROM MEMBER1 WHERE IDNO = '"+s_plusponsor+"'";
                 PreparedStatement stmt_search4 = conn_obj.prepareStatement(search_sql4); 
                 ResultSet rs_search4 = stmt_search4.executeQuery();
                 int b = 0;
                 while(rs_search4.next()){
                     b++;
                     
                     s_plusponsor = rs_search4.getString("SPNO");
                     s_sur4 = rs_search4.getString("SNAME");
                     s_fname4 = rs_search4.getString("FNAME");
                     s_m4 = rs_search4.getString("MNAME");
                 }
                 
                 if(b > 0){
                     txtsur4.setText(s_sur4);
                     txtFirst4.setText(s_fname4);
                     txtMiddle4.setText(s_m4);
                 }
             } catch (SQLException ex) {
                 Logger.getLogger(MEMBERS.class.getName()).log(Level.SEVERE, null, ex);
             }
                 
           }
    }//GEN-LAST:event_txtPsponsorActionPerformed

    private void txtMiddle1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMiddle1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMiddle1ActionPerformed

    private void txtBAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBAMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBAMouseClicked

    private void CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CLEARActionPerformed
        JTextField[] textFields = {
        txtBA, txtOrigin, txtAccount, txtIpac, txtPSOL, txtReplace, txtPlus, txtQdate, txtUP, 
        txtSponsor, txtPsponsor, txtsur1, txtsur2, txtsur3, txtsur4, txtFirst1, txtFirst2, 
        txtFirst3, txtFirst4, txtMiddle1, txtMiddle2, txtMiddle3, txtMiddle4, txtAppear,txtHome,
        txtBusiness, txtReciept, txtPower, txtMax,  txtBirth, txtPPack, txtmaxStats, txtmaxDate,
        txtexpDate, txtStatus,  txtdateAct, txtdateInact, txtPiba, txtdatePiba, txtidPower, txtPayout,
        txtBlocked, txtTerminated, txtdateTermBlock, txtDealer, txtTeam, txtMH, txtKnown, txtNationality,
        txtTelnum, txtOffice, txtProf, txtTIN, txtMobile, txtAltnum, txtEmail, txtAltemail, txtPackage, 
        txtRemarks, txtLegal
                
        };
        for (JTextField textField : textFields) {
          if (textField != txtBA) {
           textField.setText("");
            textField.setEditable(false);
             }else {
                textField.setText(""); // Optional, to clear the text in txtBA
                  textField.setEditable(true);
                     }
         }
       
            JCheckBox[] checkboxes = {
                cNewdealer, cOM, comDealer, cFM, cfmDealer, cLegacy, cLoyal,
                cAutoshiprev, cautoLegacy, cFMnominated, cOMnominated, cSAS

              };
            for (JCheckBox checkbox : checkboxes) {
                 checkbox.setSelected(false);
                 checkbox.setEnabled(false);
            }
            JRadioButton[] radioButtons = {
                rsexM, rsexF, rGroupA, rGroupB
            };

            for (JRadioButton radioButton : radioButtons) {
                 radioButton.setSelected(false);
                 radioButton.setEnabled(false);
             }    
              comCivil.setSelectedItem(null); 
              comCivil.setEnabled(false);
            comCivil.setSelectedItem(null);       
    }//GEN-LAST:event_CLEARActionPerformed

    private void txtBAFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBAFocusGained

     txtBA.selectAll();
   
    }//GEN-LAST:event_txtBAFocusGained

    private void SAVEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SAVEActionPerformed
    Connection conn_obj = OracleSqlConnect.ConnectDB();
                   s_origin=txtOrigin.getText().trim();  
                   s_account=txtAccount.getText().trim();  
                   s_ipac=txtIpac.getText().trim();  
                   s_psol=txtPSOL.getText().trim();
                   s_replace=txtReplace.getText().trim(); 
                   s_plus=txtPlus.getText().trim();  
                   s_qdate=txtQdate.getText().trim(); 
                   s_ba=txtBA.getText().trim();
                   s_upline=txtUP.getText().trim();                
                   s_sponsor=txtSponsor.getText().trim();
                   s_plusponsor=txtPsponsor.getText().trim(); 
                   s_sur1=txtsur1.getText().trim();  
                   s_sur2=txtsur2.getText().trim();  
                   s_sur3=txtsur3.getText().trim(); 
                   s_sur4=txtsur4.getText().trim();  
                   s_fname1=txtFirst1.getText().trim();  
                   s_fname2=txtFirst2.getText().trim();  
                   s_fname3=txtFirst3.getText().trim();  
                   s_fname4=txtFirst4.getText().trim();  
                   s_m1=txtMiddle1.getText().trim();  
                   s_m2=txtMiddle2.getText().trim();  
                   s_m3=txtMiddle3.getText().trim(); 
                   s_m4=txtMiddle4.getText().trim();  
                   s_namecheck=txtAppear.getText().trim(); 
                   s_home=txtHome.getText().trim();                     
                   s_business=txtBusiness.getText().trim();  
                   s_recip=txtReciept.getText().trim();  
                   s_powerby=txtPower.getText().trim();  
                   s_maxup=txtMax.getText().trim();  
                   s_bdate=txtBirth.getText().trim();  
                   s_maxstats=txtmaxStats.getText().trim();  
                   s_maxdate=txtmaxDate.getText().trim();                     
                   s_expdate=txtexpDate.getText().trim(); 
                   s_stats=txtStatus.getText().trim();   
                   s_actdate=txtdateAct.getText().trim();  
                   s_incdate=txtdateInact.getText().trim();  
                   s_piba=txtPiba.getText().trim();  
                   s_ppack=txtPPack.getText().trim(); 
                   s_datepiba=txtdatePiba.getText().trim(); 
                   s_idpcard=txtidPower.getText().trim();  
                   s_payout=txtPayout.getText().trim(); 
                   s_blocked=txtBlocked.getText().trim();
                   s_term=txtTerminated.getText().trim();  
                   s_dtb=txtdateTermBlock.getText().trim();  
                   s_dealcat=txtDealer.getText().trim();  
                   s_team=txtTeam.getText().trim();  
                   s_mh=txtMH.getText().trim(); 
                   s_known=txtKnown.getText().trim();  
                   s_nationality=txtNationality.getText().trim(); 
                   s_tnumber=txtTelnum.getText().trim(); 
                   s_offphone=txtOffice.getText().trim(); 
                   s_profession=txtProf.getText().trim(); 
                   s_tin=txtTIN.getText().trim();
                   s_mobphone=txtMobile.getText().trim();  
                   s_altphone=txtAltnum.getText().trim();  
                   s_email=txtEmail.getText().trim();  
                   s_altemail=txtAltemail.getText().trim();  
                   s_packagedate=txtPackage.getText().trim();                     
                   s_rem=txtRemarks.getText().trim();  
                   s_remlegal=txtLegal.getText().trim();
                   s_hofcateg=txtDealer.getText().trim();
                   s_civilstat=comCivil.getSelectedItem().toString().trim();
                
                try{     
        
                if(cNewdealer.isSelected())
                {
                  s_newdeal = "T"; 
                }
                else
                {
                  s_newdeal = "F"; 
                }
                
                if("CLAIMED".equals(s_ppack)){  
                    s_ppack1 = "T";
                }
                else{
                    s_ppack1 = "F"; 
                }
                if("ACTIVE".equals(s_maxstats)){
                s_maxstats1 = "T";
                }
                else if("PIMUP".equals(s_maxstats)){
                 s_maxstats1 = "F"; 
                }
                else if("INACTIVE".equals(s_maxstats)){
                  s_maxstats1 = "R"; 
                }
                else if("NOT APPLICABLE".equals(s_maxstats)){
                 s_maxstats1 = "N"; 
                }
                else{
                 s_maxstats1 = null; 
                }
                
                if("ABA".equals(s_stats)){
                 s_stats1 = "T";
                }
                else if("IBA".equals(s_stats)){
                 s_stats1 = "F";
                }
                
               if("PIBA".equals(s_piba)){
                 s_piba1 = "T";
                }
               else{
                 s_piba1 = "F";
                }

                if("POWERWALLET".equals(s_payout)){
                    s_payout1 = "R";
                    s_banktrans = "F"; 
                }else if("BANK AUTOCREDIT".equals(s_payout)){
                    s_payout1 = "R";
                    s_banktrans = "T";
                }else if("WEEKLY CHECK".equals(s_payout)){
                    s_payout1 = "W";
                    s_banktrans = "F";
                }
                
     
                if("BLOCKED".equals(s_blocked) && "TERMINATED".equals(s_term))
                {
                    s_blocked1 = "T";
                    s_term1 = "T";
                }
                else if("BLOCKED".equals(s_blocked) && (s_term.isEmpty() || s_term == null)){
                    s_blocked1 = "T";
                    s_term1 = "F";
                }
                else{
                    s_blocked1 = "F";
                    s_term1 = "F";
                }
                
                
                
  		if("SINGLE".equals(s_civilstat)){
                     s_civilstat1 = 1;
                }else if("MARRIED".equals(s_civilstat)){
                     s_civilstat1 = 2;
                }else if("WIDOW".equals(s_civilstat)){
                     s_civilstat1 = 3;
                }else {
                     s_civilstat1 = 4;
                }
                 if("Online Local".equals(s_dealcat)){
                    s_dealcat1 = 0;
                 }else if("iMove Operator".equals(s_dealcat)){
                    s_dealcat1 = 1;
                 }else if("Move Operator".equals(s_dealcat)){
                    s_dealcat1 = 2;
                 }else if("APPP".equals(s_dealcat)){
                    s_dealcat1 = 3;  
                 }else if("Air Mover".equals(s_dealcat)){
                    s_dealcat1 = 5;
                 }else if("iMove Dealer".equals(s_dealcat)){
                    s_dealcat1 = 6;  
                 }else if("Move Dealer".equals(s_dealcat)){
                    s_dealcat1 = 7;  
                 }else if("Move Online Dealer".equals(s_dealcat)){
                    s_dealcat1 = 8;  
                 }else if("Online INTL".equals(s_dealcat)){
                    s_dealcat1 = 9;
                 }else if("Online INTL-PW".equals(s_dealcat)){
                    s_dealcat1 = 10;  
                 }else if("Online LOCAL-PW".equals(s_dealcat)){
                    s_dealcat1 = 11;   
                 }else{
                    txtDealer.setText("REGULAR");
                 }
                 
                 if(rGroupA.isSelected()){
                  s_grp1 = 1; 
                 }
                 else if(rGroupB.isSelected())
                 {
                  s_grp1 = 2; 
                 }
                
                 if(rsexM.isSelected()){
                  s_sex = "1"; 
                 }
                 else if(rsexF.isSelected())
                 {
                  s_sex = "2"; 
                 }
  
                 if(cOM.isSelected())
                 {
                  s_om = "T"; 
                 }
                 else
                 {
                  s_om = "F"; 
                 }
                  if(comDealer.isSelected())
                 {
                  s_omdeal= "T"; 
                 }
                 else
                 {
                  s_omdeal = "F"; 
                 }
                 if(cFM.isSelected())
                 {
                  s_fm = "T"; 
                 }
                 else
                 {
                  s_fm = "F"; 
                 }
                  if(cfmDealer.isSelected())
                 {
                  s_fmdeal= "T"; 
                 }
                 else
                 {
                  s_fmdeal = "F"; 
                 }
                  
                 if(cLegacy.isSelected())
                 {
                  s_legacy = "T"; 
                 }
                 else
                 {
                  s_legacy = "F"; 
                 } 
                 if(cLoyal.isSelected())
                 {
                  s_loyal = "T"; 
                 }
                 else
                 {
                  s_loyal = "F"; 
                 } 
                 if(cAutoshiprev.isSelected())
                 {
                  s_autorev = "T"; 
                 }
                 else
                 {
                  s_autorev = "F"; 
                 } 
                 if(cautoLegacy.isSelected())
                 {
                  s_autoship = "T"; 
                 }
                 else
                 {
                  s_autoship = "F"; 
                 } 
                 if(cFMnominated.isSelected())
                 {
                  s_fmnominated = "T"; 
                 }
                 else
                 {
                  s_fmnominated = "F"; 
                 } 
                 if(cFMnominated.isSelected())
                 {
                  s_fmnominated = "T"; 
                 }
                 else
                 {
                  s_fmnominated = "F"; 
                 } 
                 if(cOMnominated.isSelected())
                 {
                  s_omnominated = "T"; 
                 }
                 else
                 {
                  s_omnominated = "F"; 
                 } 
                 if(cSAS.isSelected())
                 {
                  s_isas = "T"; 
                 }
                 else
                 {
                  s_isas = "F"; 
                 }
                  //handles ERROR
                    if (!Arrays.asList("PL", "SN", "TI", "PS").contains(txtReplace.getText())) {
                        JOptionPane.showMessageDialog(null, "Replacement Category should be SN, TI, PL, or PS...", "Alert", JOptionPane.ERROR_MESSAGE);
                        throw new RuntimeException("REPLACE_FOR_FAILED");
                    }           
                    if(!rGroupA.isSelected() && !rGroupB.isSelected()){
                         JOptionPane.showMessageDialog(null, "Select A Group", "Alert", JOptionPane.ERROR_MESSAGE);
                        throw new RuntimeException("GROUP_INPUT_FAILED");
                     }
                    if (!Arrays.asList("C", "V", "W").contains(txtTeam.getText())) {
                        JOptionPane.showMessageDialog(null, "Not a Valid Team Input", "Alert", JOptionPane.ERROR_MESSAGE);
                        throw new RuntimeException("TEAM_INPUT_FAILED");
                    }
                    if(!rsexM.isSelected() && !rsexF.isSelected()){
                         JOptionPane.showMessageDialog(null, "Select A Gender", "Alert", JOptionPane.ERROR_MESSAGE);
                        throw new RuntimeException("GENDER_INPUT_FAILED");
                     }
                         
                 
	            String update_sql1 = "UPDATE DEV.MEMBER1 SET "
                    + "IDNO = ?, "
                    + "ORGN = ?, UPLNO = ?, SPNO = ?, SPNOPLUS = ?, "
                    + "SNAME = ?, FNAME = ?, MNAME = ?, ACCT_CATEG = ?, IAP = ?, ISPSOL = ?, "
                    + "CATEG = ?, PLUSDATE = ?, MDATE = ?, CHK_RECIP = ?, RECIP = ?, PLUSPACK_REC = ?, "
                    + "MAXUP_CLAIMEDBY = ?, GRP = ?, ISPLUSPACK = ?, MAXSTAT = ?, MAXUPDATE = ?, MAXUP_EXPDATE = ?, "
                    + "ISACTIVE_PLUS = ?, DTE_ACTIVE = ?, DTE_INACTIVE = ?, ISPIBA = ?, DTE_PIBA = ?, IDNO_POWERCARD = ?, "
                    + "PAYOUT = ?, ISBANK_TRANSFER_OK = ?, ISBLOCK = ?, ISTERMINATED = ?, DTE_TERMINATED = ?, "
                    + "IMOVE = ?, TEAM = ?, MH_ACCT = ?, ISPA_SPONSOR = ?, ISOM_DEALER = ?, ISFM_SPONSOR = ?, "
                    + "ISFM_DEALER = ?, TIN = ?, ISLEGACY = ?, ISLOYAL = ?, ISAUTOSHIP = ?, ISAUTOSHIP_REVUP = ?, "
                    + "ISOM_NOMINATED = ?, ISFM_NOMINATED = ?, IS_SAS = ?, IPACKAGE_DTE = ? "
                    + "WHERE IDNO = ? ";
                    PreparedStatement stmt_update1 = conn_obj.prepareStatement(update_sql1);
                    stmt_update1.setString(1, s_ba);
                    stmt_update1.setString(2, s_origin);
                    stmt_update1.setString(3, s_upline);
                    stmt_update1.setString(4, s_sponsor);
                    stmt_update1.setString(5, s_plusponsor);
                    stmt_update1.setString(6, s_sur1);
                    stmt_update1.setString(7, s_fname1);
                    stmt_update1.setString(8, s_m1);
                    stmt_update1.setString(9, s_account);
                    stmt_update1.setString(10, s_ipac);
                    stmt_update1.setString(11, s_psol);
                    stmt_update1.setString(12, s_replace);
                    stmt_update1.setString(13, s_plus);
                    stmt_update1.setString(14, s_qdate);
                    stmt_update1.setString(15, s_namecheck);
                    stmt_update1.setString(16, s_recip);
                    stmt_update1.setString(17, s_powerby);
                    stmt_update1.setString(18, s_maxup);
                    stmt_update1.setInt(19, s_grp1);
                    stmt_update1.setString(20, s_ppack1);
                    stmt_update1.setString(21, s_maxstats1);
                    stmt_update1.setString(22, s_maxdate);
                    stmt_update1.setString(23, s_expdate);
                    stmt_update1.setString(24, s_stats1);
                    stmt_update1.setString(25, s_actdate);
                    stmt_update1.setString(26, s_incdate);
                    stmt_update1.setString(27, s_piba1);
                    stmt_update1.setString(28, s_datepiba);
                    stmt_update1.setString(29, s_idpcard);
                    stmt_update1.setString(30, s_payout1);
                    stmt_update1.setString(31, s_banktrans);
                    stmt_update1.setString(32, s_blocked1);
                    stmt_update1.setString(33, s_term1);
                    stmt_update1.setString(34, s_dtb);
                    stmt_update1.setInt(35, s_dealcat1);
                    stmt_update1.setString(36, s_team);
                    stmt_update1.setString(37, s_mh);
                    stmt_update1.setString(38, s_om);
                    stmt_update1.setString(39, s_omdeal);
                    stmt_update1.setString(40, s_fm);
                    stmt_update1.setString(41, s_fmdeal);
                    stmt_update1.setString(42, s_tin);
                    stmt_update1.setString(43, s_legacy);
                    stmt_update1.setString(44, s_loyal);
                    stmt_update1.setString(45, s_autoship);
                    stmt_update1.setString(46, s_autorev);
                    stmt_update1.setString(47, s_omnominated);
                    stmt_update1.setString(48, s_fmnominated);
                    stmt_update1.setString(49, s_isas);
                    stmt_update1.setString(50, s_packagedate);
                    stmt_update1.setString(51, s_ba);
                    int rowsUpdated1 = stmt_update1.executeUpdate();
              
                    String update_sql2 = "UPDATE DEV.MEMBER1 SET "
                    + "UPLNO = ?, SNAME = ?, FNAME = ?, MNAME = ? "
                    + "WHERE IDNO = ? ";
                    PreparedStatement stmt_update2 = conn_obj.prepareStatement(update_sql2);
                    stmt_update2.setString(1, s_upline);
                    stmt_update2.setString(2, s_sur2);
                    stmt_update2.setString(3, s_fname2);
                    stmt_update2.setString(4, s_m2);
                    stmt_update2.setString(5, s_upline);
                    int rowsUpdated2 = stmt_update2.executeUpdate();
                    
                    String update_sql3 = "UPDATE DEV.MEMBER1 SET "
                    + "SPNO = ?,SNAME = ?, FNAME = ?,MNAME = ? "
                    + "WHERE IDNO = ? ";
                    PreparedStatement stmt_update3 = conn_obj.prepareStatement(update_sql3);
                    stmt_update3.setString(1, s_sponsor);
                    stmt_update3.setString(2, s_sur3);
                    stmt_update3.setString(3, s_fname3);
                    stmt_update3.setString(4, s_m3);
                    stmt_update3.setString(5, s_sponsor);
                    int rowsUpdated3 = stmt_update3.executeUpdate();
                    
                    String update_sql4 = "UPDATE DEV.MEMBER1 SET "
                    + "SPNOPLUS = ?, SNAME = ?, FNAME = ?, MNAME = ? "
                    + "WHERE IDNO = ? ";
                    PreparedStatement stmt_update4 = conn_obj.prepareStatement(update_sql4);
                    stmt_update4.setString(1, s_plusponsor);
                    stmt_update4.setString(2, s_sur4);
                    stmt_update4.setString(3, s_fname4);
                    stmt_update4.setString(4, s_m4);
                    stmt_update4.setString(5, s_plusponsor);
                    int rowsUpdated4 = stmt_update4.executeUpdate();
                    
                    String update_sql5 = "UPDATE ORPAID SET "
                    + "NEW_DEALER = ? "
                    + "WHERE IDNO = ? "
                    + "AND TRNSCT != 10 "
                    + "AND ISCANCEL = 'F'";
                    PreparedStatement stmt_update5 = conn_obj.prepareStatement(update_sql5);
                    stmt_update5.setString(1, s_newdeal);
                    stmt_update5.setString(2, s_ba); 
                    int rowsUpdated5 = stmt_update5.executeUpdate();
                    
                    String update_sql6 = "UPDATE MEMBER3 SET "
                    + "BDATE = ?, NATION = ?, SEX = ?, CSTAT = ?, HOMEADD = ?, BUSADD = ?, HOMPHON = ?, OFFPHON = ?, "
                    + "PROF = ?, MOBPHON = ?, EMAIL_ADD = ?, EMAIL_ADD2 = ?, MOBPHON2 = ?, KNOWNUPLINE = ?, REM = ? "
                    + "WHERE IDNO = ?";
                    PreparedStatement stmt_update6 = conn_obj.prepareStatement(update_sql6);
                    stmt_update6.setString(1, s_bdate);
                    stmt_update6.setString(2, s_nationality);
                    stmt_update6.setString(3, s_sex);
                    stmt_update6.setInt(4, s_civilstat1);
                    stmt_update6.setString(5, s_home);
                    stmt_update6.setString(6, s_business);
                    stmt_update6.setString(7, s_tnumber);
                    stmt_update6.setString(8, s_offphone);
                    stmt_update6.setString(9, s_profession);
                    stmt_update6.setString(10, s_mobphone);
                    stmt_update6.setString(11, s_email);
                    stmt_update6.setString(12, s_altemail);
                    stmt_update6.setString(13, s_altphone);
                    stmt_update6.setString(14, s_known);
                    stmt_update6.setString(15, s_rem);
                    stmt_update6.setString(16, s_ba);
                    int rowsUpdated6 = stmt_update6.executeUpdate();
                    
                    String update_sql7 = "UPDATE BLOCK_BA SET "
                    + "REM = ? "
                    + "WHERE IDNO = ? ";
                    PreparedStatement stmt_update7 = conn_obj.prepareStatement(update_sql7);
                    stmt_update7.setString(1, s_remlegal);
                    stmt_update7.setString(2, s_ba);                 
                    int rowsUpdated7 = stmt_update7.executeUpdate();
                    
                    String update_sql8 = "UPDATE HALL_OF_FAMER SET "
                    + "CATEG = ? "
                    + "WHERE IDNO = ? ";
                    PreparedStatement stmt_update8 = conn_obj.prepareStatement(update_sql8);
                    stmt_update8.setString(1, s_hofcateg);
                    stmt_update8.setString(2, s_ba);                 
                    int rowsUpdated8 = stmt_update8.executeUpdate();
                    
                    String update_sql9 = "UPDATE AGNEW SET "
                    + "BDAY = ?, EXPDATE = ? "
                    + "WHERE IDNO_MINOR = ? ";
                    PreparedStatement stmt_update9 = conn_obj.prepareStatement(update_sql9);
                    stmt_update9.setString(1, s_bdate);
                    stmt_update9.setString(2, s_aegexpdate);
                    stmt_update9.setString(3, s_ba);
                    int rowsUpdated9 = stmt_update9.executeUpdate();
                    
                  
                    
                 
                   if(rowsUpdated1 >= 0 && rowsUpdated2 >= 0 && rowsUpdated3 >= 0 && rowsUpdated4 >= 0 && rowsUpdated5 >= 0 
                     && rowsUpdated6 >= 0  && rowsUpdated7 >= 0 && rowsUpdated8 >= 0 && rowsUpdated9 >= 0  ) {
                    JOptionPane.showMessageDialog(null, "UPDATED.", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                    JOptionPane.showMessageDialog(null, "No Records Found.", "Error", JOptionPane.INFORMATION_MESSAGE);
                    }

              
                    
                    
                 

                 
                 
                   } catch (SQLException ex) {
        Logger.getLogger(MEMBERS.class.getName()).log(Level.SEVERE, null, ex);
    }
                 
  
    }//GEN-LAST:event_SAVEActionPerformed

    private void txtSponsorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSponsorMouseClicked
/*
                if ("F".equals(txtPiba)) {
                    JOptionPane.showMessageDialog(null, "This Dealer is PIBA already, cannot be used as a sponsor...", "Error", JOptionPane.INFORMATION_MESSAGE);
                    txtsur3.setEditable(false);
                    txtFirst3.setEditable(false);
                    txtMiddle3.setEditable(false);
                } else {
                 }
  */              
    }//GEN-LAST:event_txtSponsorMouseClicked

    private void txtPsponsorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPsponsorMouseClicked
      
    }//GEN-LAST:event_txtPsponsorMouseClicked

    private void txtTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeamActionPerformed
           
    }//GEN-LAST:event_txtTeamActionPerformed

    private void txtReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReplaceActionPerformed
        
    }//GEN-LAST:event_txtReplaceActionPerformed

    private void txtTeamKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTeamKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTeamKeyPressed

    private void CashierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CashierActionPerformed
               
         
    }//GEN-LAST:event_CashierActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton CLEAR;
    public javax.swing.JButton CLOSE;
    public javax.swing.JTextField Cashier;
    public javax.swing.JButton SAVE;
    public javax.swing.JCheckBox cAutoshiprev;
    public javax.swing.JCheckBox cFM;
    public javax.swing.JCheckBox cFMnominated;
    public javax.swing.JCheckBox cLegacy;
    public javax.swing.JCheckBox cLoyal;
    public javax.swing.JCheckBox cNewdealer;
    public javax.swing.JCheckBox cOM;
    public javax.swing.JCheckBox cOMnominated;
    public javax.swing.JCheckBox cSAS;
    public javax.swing.JCheckBox cautoLegacy;
    public javax.swing.JCheckBox cfmDealer;
    public javax.swing.JComboBox<String> comCivil;
    public javax.swing.JCheckBox comDealer;
    public javax.swing.JButton jButton1;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel10;
    public javax.swing.JLabel jLabel11;
    public javax.swing.JLabel jLabel12;
    public javax.swing.JLabel jLabel13;
    public javax.swing.JLabel jLabel14;
    public javax.swing.JLabel jLabel15;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel4;
    public javax.swing.JLabel jLabel40;
    public javax.swing.JLabel jLabel41;
    public javax.swing.JLabel jLabel42;
    public javax.swing.JLabel jLabel43;
    public javax.swing.JLabel jLabel44;
    public javax.swing.JLabel jLabel45;
    public javax.swing.JLabel jLabel49;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel50;
    public javax.swing.JLabel jLabel51;
    public javax.swing.JLabel jLabel52;
    public javax.swing.JLabel jLabel53;
    public javax.swing.JLabel jLabel54;
    public javax.swing.JLabel jLabel55;
    public javax.swing.JLabel jLabel56;
    public javax.swing.JLabel jLabel57;
    public javax.swing.JLabel jLabel58;
    public javax.swing.JLabel jLabel59;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel60;
    public javax.swing.JLabel jLabel61;
    public javax.swing.JLabel jLabel62;
    public javax.swing.JLabel jLabel63;
    public javax.swing.JLabel jLabel64;
    public javax.swing.JLabel jLabel66;
    public javax.swing.JLabel jLabel67;
    public javax.swing.JLabel jLabel68;
    public javax.swing.JLabel jLabel69;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel70;
    public javax.swing.JLabel jLabel71;
    public javax.swing.JLabel jLabel72;
    public javax.swing.JLabel jLabel73;
    public javax.swing.JLabel jLabel74;
    public javax.swing.JLabel jLabel75;
    public javax.swing.JLabel jLabel76;
    public javax.swing.JLabel jLabel79;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JLabel jLabel80;
    public javax.swing.JLabel jLabel81;
    public javax.swing.JLabel jLabel82;
    public javax.swing.JLabel jLabel83;
    public javax.swing.JLabel jLabel84;
    public javax.swing.JLabel jLabel85;
    public javax.swing.JLabel jLabel86;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JPanel jPanel11;
    public javax.swing.JPanel jPanel13;
    public javax.swing.JPanel jPanel16;
    public javax.swing.JPanel jPanel17;
    public javax.swing.JPanel jPanel18;
    public javax.swing.JPanel jPanel4;
    public javax.swing.JPanel jPanel9;
    public javax.swing.JPanel panel;
    public javax.swing.JRadioButton rGroupA;
    public javax.swing.JRadioButton rGroupB;
    public javax.swing.JRadioButton rsexF;
    public javax.swing.JRadioButton rsexM;
    public javax.swing.JTextField txtAccount;
    public javax.swing.JTextField txtAltemail;
    public javax.swing.JTextField txtAltnum;
    public javax.swing.JTextField txtAppear;
    public javax.swing.JTextField txtBA;
    public javax.swing.JTextField txtBirth;
    public javax.swing.JTextField txtBlocked;
    public javax.swing.JTextField txtBusiness;
    public javax.swing.JTextField txtDealer;
    public javax.swing.JTextField txtEmail;
    public javax.swing.JTextField txtFirst1;
    public javax.swing.JTextField txtFirst2;
    public javax.swing.JTextField txtFirst3;
    public javax.swing.JTextField txtFirst4;
    public javax.swing.JTextField txtHome;
    public javax.swing.JTextField txtIpac;
    public javax.swing.JTextField txtKnown;
    public javax.swing.JTextField txtLegal;
    public javax.swing.JTextField txtMH;
    public javax.swing.JTextField txtMax;
    public javax.swing.JTextField txtMiddle1;
    public javax.swing.JTextField txtMiddle2;
    public javax.swing.JTextField txtMiddle3;
    public javax.swing.JTextField txtMiddle4;
    public javax.swing.JTextField txtMobile;
    public javax.swing.JTextField txtNationality;
    public javax.swing.JTextField txtOffice;
    public javax.swing.JTextField txtOrigin;
    public javax.swing.JTextField txtPPack;
    public javax.swing.JTextField txtPSOL;
    public javax.swing.JTextField txtPackage;
    public javax.swing.JTextField txtPayout;
    public javax.swing.JTextField txtPiba;
    public javax.swing.JTextField txtPlus;
    public javax.swing.JTextField txtPower;
    public javax.swing.JTextField txtProf;
    public javax.swing.JTextField txtPsponsor;
    public javax.swing.JTextField txtQdate;
    public javax.swing.JTextField txtReciept;
    public javax.swing.JTextField txtRemarks;
    public javax.swing.JTextField txtReplace;
    public javax.swing.JTextField txtSponsor;
    public javax.swing.JTextField txtStatus;
    public javax.swing.JTextField txtTIN;
    public javax.swing.JTextField txtTeam;
    public javax.swing.JTextField txtTelnum;
    public javax.swing.JTextField txtTerminated;
    public javax.swing.JTextField txtUP;
    public javax.swing.JTextField txtdateAct;
    public javax.swing.JTextField txtdateInact;
    public javax.swing.JTextField txtdatePiba;
    public javax.swing.JTextField txtdateTermBlock;
    public javax.swing.JTextField txtexpDate;
    public javax.swing.JTextField txtidPower;
    public javax.swing.JTextField txtmaxDate;
    public javax.swing.JTextField txtmaxStats;
    public javax.swing.JTextField txtsur1;
    public javax.swing.JTextField txtsur2;
    public javax.swing.JTextField txtsur3;
    public javax.swing.JTextField txtsur4;
    // End of variables declaration//GEN-END:variables
}
